package: org.robovm.apple.dispatch
library: dispatch
default_class: Dispatch
header: /usr/include/dispatch/dispatch.h
path_match: ^.*/usr/include/dispatch/.*$
force_types: [timespec]
structs:
    timespec:
        visibility: ''
classes:
    dispatch_data_t:
        name: DispatchData
        extends: DispatchObject
    dispatch_group_t:
        name: DispatchGroup
        extends: DispatchObject
    dispatch_io_t:
        name: DispatchIO
        extends: DispatchObject
    dispatch_object_t:
        name: DispatchObject
    dispatch_queue_t:
        name: DispatchQueue
        extends: DispatchObject
    dispatch_queue_attr_t:
        name: DispatchQueueAttr
        extends: DispatchObject
    dispatch_semaphore_t:
        name: DispatchSemaphore
        extends: DispatchObject
    dispatch_source_t:
        name: DispatchSource
        extends: DispatchObject
    dispatch_source_type_t:
        name: DispatchSourceType
functions:
    ^dispatch_((barrier_)?a?sync.*)$:
        class: DispatchQueue
        name: "#{g[0].camelize}"
    ^dispatch_((apply|after).*)$:
        class: DispatchQueue
        name: "#{g[0].camelize}"
    ^dispatch_(get.*queue)$:
        class: DispatchQueue
        name: "#{g[0].camelize}"
    ^dispatch_data_(.*)$:
        class: DispatchData
        name: "#{g[0].camelize}"
    ^dispatch_group_wait$:
        class: DispatchGroup
        name: await
    ^dispatch_group_(.*)$:
        class: DispatchGroup
        name: "#{g[0].camelize}"
    ^dispatch_io_(.*)$:
        class: DispatchIO
        name: "#{g[0].camelize}"
    ^dispatch_queue_(.*)$:
        class: DispatchQueue
        name: "#{g[0].camelize}"
    ^dispatch_semaphore_wait$:
        class: DispatchSemaphore
        name: await
    ^dispatch_semaphore_(.*)$:
        class: DispatchSemaphore
        name: "#{g[0].camelize}"
    ^dispatch_source_get_handle$:
        class: DispatchSource
        name: getSourceHandle
    ^dispatch_source_(.*)$:
        class: DispatchSource
        name: "#{g[0].camelize}"
    ^dispatch_(retain|release|(get|set)_context|set_finalizer_f|suspend|resume|set_target_queue)$:
        class: DispatchObject
        name: "#{g[0].camelize}"
    ^dispatch_(.*)$:
        class: Dispatch
        name: "#{g[0].camelize}"
values:
    ^_dispatch_source_type_(.*)$:
        class: DispatchSourceType
        type: DispatchSourceType
        name: "#{g[0].camelize}"
    ^_dispatch_data_(empty):
        class: DispatchData
        type: DispatchData
        name: "#{g[0].camelize}"
    ^_dispatch_main_q$:
        class: DispatchQueue
        type: DispatchQueue
        name: getMainQueue
        readonly: true
    ^_dispatch_queue_attr_concurrent$:
        class: DispatchQueueAttr
        type: DispatchQueueAttr
        name: Concurrent
        readonly: true
    ^_dispatch_data_(.*)$:
        class: DispatchData
        type: DispatchData
        name: "#{g[0].camelize}"
        readonly: true
constants:
    ^DISPATCH_QUEUE_(.*)$:
        class: DispatchQueue
        name: "#{g[0]}"
    ^DISPATCH_((PROC|VNODE|MACH|MEMORYPRESSURE|TIMER).*)$:
        class: DispatchSource
        name: "#{g[0]}"
    ^DISPATCH_IO_(.*)$:
        class: DispatchIO
        name: "#{g[0]}"
    ^DISPATCH_(.*)$:
        class: Dispatch
        name: "#{g[0]}"
