package: org.robovm.apple.uikit
include: [foundation.yaml, coregraphics.yaml, coredata.yaml, coreimage.yaml]
library: UIKit
framework: UIKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/UIKit.framework/Headers/UIKit.h
typedefs:
    NSCopying: NSObject
    # UIAccelerationValue: double
    # UIBackgroundTaskIdentifier: int
    # CGPathRef: CGPath
    # CGColorRef: CGColor
    # CGImageRef: CGImage
    # UIWindowLevel: float
    # NSLayoutPriority: UILayoutPriority
enums:
    NSControlCharacterAction: {}
    NSGlyphProperty: {}
    NSLayoutAttribute: {}
    NSLayoutFormatOptions: {}
    NSLayoutRelation: {}
    NSLineBreakMode: {}
    NSStringDrawingOptions: {}
    NSTextAlignment: {}
    NSTextLayoutOrientation: {}
    NSTextStorageEditActions: {}
    NSTextWritingDirection: {}
    NSUnderlineStyle: {}
    NSWritingDirection: {}
    UIAccessibilityScrollDirection: {}
    UIAccessibilityZoomType: {prefix: UIAccessibilityZoomType}
    UIActionSheetStyle: {}
    UIActivityCategory: {}
    UIActivityIndicatorViewStyle: {}
    UIAlertViewStyle: {}
    UIApplicationState: {}
    UIAttachmentBehaviorType: {}
    UIBackgroundFetchResult: {}
    UIBackgroundRefreshStatus: {}
    UIBarButtonItemStyle: {}
    UIBarButtonSystemItem: {}
    UIBarMetrics: {}
    UIBarPosition: {}
    UIBarStyle: {}
    UIBaselineAdjustment: {}
    UIButtonType: {}
    UICollectionElementCategory: {}
    UICollectionUpdateAction: {}
    UICollectionViewScrollDirection: {}
    UICollectionViewScrollPosition: {}
    UICollisionBehaviorMode: {}
    UIControlContentHorizontalAlignment: {}
    UIControlContentVerticalAlignment: {}
    UIControlEvents: {} # TODO: Extra values?
    UIControlState: {} # TODO: Extra values?
    UIDataDetectorTypes: {}
    UIDatePickerMode: {}
    UIDeviceBatteryState: {}
    UIDeviceOrientation: {}
    UIDocumentChangeKind: {}
    UIDocumentSaveOperation: {}
    UIDocumentState: {}
    UIEventSubtype: {}
    UIEventType: {}
    UIFontDescriptorSymbolicTraits: {}
    UIGestureRecognizerState: {}
    UIGuidedAccessRestrictionState: {}
    UIImageOrientation: {}
    UIImagePickerControllerCameraCaptureMode: {}
    UIImagePickerControllerCameraDevice: {}
    UIImagePickerControllerCameraFlashMode: {}
    UIImagePickerControllerQualityType: {}
    UIImagePickerControllerSourceType: {}
    UIImageRenderingMode: {}
    UIImageResizingMode: {}
    UIInputViewStyle: {}
    UIInterfaceOrientation: {}
    UIInterpolatingMotionEffectType: {prefix: UIInterpolatingMotionEffectType}
    UIKeyboardAppearance: {}
    UIKeyboardType: {}
    UIKeyModifierFlags: {}
    UILayoutConstraintAxis: {}
    UILayoutPriority: {}
    UILineBreakMode: {}
    UIMenuControllerArrowDirection: {}
    UIModalPresentationStyle: {}
    UIModalTransitionStyle: {}
    UINavigationControllerOperation: {}
    UIPageViewControllerNavigationDirection: {}
    UIPageViewControllerNavigationOrientation: {}
    UIPageViewControllerSpineLocation: {}
    UIPageViewControllerTransitionStyle: {}
    UIPopoverArrowDirection: {}
    UIPrintError: {first: UIPrintingNotAvailableError, suffix: Error, UIPrintingNotAvailableError: PrintingNotAvailableError}
    UIPrintInfoDuplex: {}
    UIPrintInfoOrientation: {}
    UIPrintInfoOutputType: {}
    UIProgressViewStyle: {}
    UIPushBehaviorMode: {}
    UIRectCorner: {}
    UIRectEdge: {}
    UIRemoteNotificationType: {}
    UIReturnKeyType: {}
    UIScreenOverscanCompensation: {}
    UIScrollViewIndicatorStyle: {}
    UIScrollViewKeyboardDismissMode: {}
    UISearchBarIcon: {}
    UISearchBarStyle: {}
    UISegmentedControlSegment: {}
    UISegmentedControlStyle: {}
    UIStatusBarAnimation: {}
    UIStatusBarStyle: {}
    UISwipeGestureRecognizerDirection: {}
    UISystemAnimation: {prefix: UISystemAnimation}
    UITabBarItemPositioning: {}
    UITabBarSystemItem: {}
    UITableViewCellAccessoryType: {}
    UITableViewCellEditingStyle: {}
    UITableViewCellSelectionStyle: {}
    UITableViewCellSeparatorStyle: {}
    UITableViewCellStateMask: {}
    UITableViewCellStyle: {}
    UITableViewRowAnimation: {}
    UITableViewScrollPosition: {}
    UITableViewStyle: {}
    UITextAlignment: {}
    UITextAutocapitalizationType: {}
    UITextAutocorrectionType: {}
    UITextBorderStyle: {}
    UITextFieldViewMode: {}
    UITextGranularity: {}
    UITextLayoutDirection: {}
    UITextSpellCheckingType: {}
    UITextStorageDirection: {}
    UITextWritingDirection: {}
    UIToolbarPosition: {}
    UITouchPhase: {}
    UIUserInterfaceIdiom: {prefix: UIUserInterfaceIdiom}
    UIUserInterfaceLayoutDirection: {}
    UIViewAnimationCurve: {}
    UIViewAnimationOptions: {} #marshaler: Bits.AsMachineSizedIntMarshaler}
    UIViewAnimationTransition: {}
    UIViewAutoresizing: {} #marshaler: Bits.AsMachineSizedIntMarshaler}
    UIViewContentMode: {}
    UIViewKeyframeAnimationOptions: {}
    UIViewTintAdjustmentMode: {}
    UIWebPaginationBreakingMode: {}
    UIWebPaginationMode: {}
    UIWebViewNavigationType: {}

categories:
    ^CIColor$: {}
    ^CIImage$: {}
    ^NSAttributedString$: {}
    ^NSBundle$: {}
    ^NSCoder$: {}
    ^NSIndexPath$: {}
    ^NSMutableAttributedString$: {}
    ^NSString$: {}
    ^NSValue$: {}

    ^UIAccessibility@NSObject$: {protocol: true}
    ^UIAccessibilityAction@NSObject$: {protocol: true}
    ^UIAccessibilityContainer@NSObject$: {protocol: true}
    ^UIAccessibilityFocus@NSObject$: {protocol: true}
    ^UINibLoadingAdditions@NSObject$: {protocol: true}
    ^UIResponderStandardEditActions@NSObject$: {protocol: true}

classes:
    # Structs
    ^UIEdgeInsets$: {}
    ^UIOffset$: {}

    ^NSLayoutConstraint$:
         methods:
            '+constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:$':
                name: create
            '+constraintsWithVisualFormat:options:metrics:views:$':
                name: fromVisualFormat
    ^NSLayoutManager$: {}
    ^NSMutableParagraphStyle$: {}
    ^NSParagraphStyle$: {}
    ^NSShadow$: {}
    ^NSStringDrawingContext$: {}
    ^NSTextAttachment$: {}
    ^NSTextContainer$: {}
    ^NSTextStorage$: {}
    ^UIAcceleration$: {}
    ^UIAccelerometer$:
        methods:
            '+sharedAccelerometer$':
                name: getSharedAccelerometer
    ^UIAccessibilityElement$: {}
    ^UIActionSheet$:
        methods:
            '-initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:$':
                exclude: true
            '-addButtonWithTitle:$':
                name: addButton
            '-buttonTitleAtIndex:$':
                name: getButtonTitle
            '-dismissWithClickedButtonIndex:animated:$':
                name: dismiss
            '-showFromBarButtonItem:animated:$':
                name: showFrom
            '-showFromRect:inView:animated:$':
                name: showFrom
            '-showFromTabBar:$':
                name: showFrom
            '-showFromToolbar:$':
                name: showFrom
    ^UIActivity$:
        methods:
            '-activityDidFinish:$':
                name: didFinish
            '-activityImage$':
                name: getImage
            '-activityTitle$':
                name: getTitle
            '-activityType$':
                name: getType
            '-activityViewController$':
                name: getViewController
            '-performActivity$':
                name: perform
            '-canPerformWithActivityItems:$':
                name: canPerform
            '-prepareWithActivityItems:$':
                name: prepare
    ^UIActivityIndicatorView$: {}
    ^UIActivityItemProvider$:
        # protocols: []
        methods: 
            '-item$':
                name: getItem
    ^UIActivityViewController$: {}
        # properties:
        #     'completionHandler$':
        #         exclude: true # TODO: Enable once we know how to handle blocks
    ^UIAlertView$:
        methods:
            '-initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:$':
                exclude: true
            '-addButtonWithTitle:$':
                name: addButton
            '-buttonTitleAtIndex:$':
                name: getButtonTitle
            '-dismissWithClickedButtonIndex:animated:$':
                name: dismiss
            '-textFieldAtIndex:$':
                name: getTextField
        properties:
            'delegate$':
                type: UIAlertViewDelegate
    ^UIApplication$:
        # protocols: []
        methods:
            '+sharedApplication$':
                name: getSharedApplication
            '-beginBackgroundTaskWithExpirationHandler:$':
                name: beginBackgroundTask
            '-enabledRemoteNotificationTypes$':
                name: getEnabledRemoteNotificationTypes
#            '-sendAction:to:from:forEvent:$':
#                parameters:
#                    action: 
#                        type: Action
            '-supportedInterfaceOrientationsForWindow:$':
                name: getSupportedInterfaceOrientations
    ^UIAttachmentBehavior$: {}
    ^UIBarButtonItem$:
        methods:
            '-backButtonBackgroundImageForState:barMetrics:$':
                name: getBackButtonBackgroundImage
            '-backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:$':
                name: getBackButtonBackgroundVerticalPositionAdjustment
            '-backButtonTitlePositionAdjustmentForBarMetrics:$':
                name: getBackButtonTitlePositionAdjustment
            '-backgroundImageForState:barMetrics:$':
                name: getBackgroundImage
            '-backgroundVerticalPositionAdjustmentForBarMetrics:$':
                name: getBackgroundVerticalPositionAdjustment
            '-titlePositionAdjustmentForBarMetrics:$':
                name: getTitlePositionAdjustment
            '-backgroundImageForState:style:barMetrics:$':
                name: getBackgroundImage
    ^UIBarItem$:
        methods:
            '-setTitleTextAttributes:forState:$':
                name: setTitleTextAttributes
            '-titleTextAttributesForState:$':
                name: getTitleTextAttributes
    ^UIBezierPath$:
        methods:
            '+bezierPath$':
                name: create
            '+bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:$':
                name: fromArc
            '+bezierPathWithCGPath:$':
                name: fromPath
            '+bezierPathWithOvalInRect:$':
                name: fromOval
            '+bezierPathWithRect:$':
                name: fromRect
            '+bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:$':
                name: fromRoundedRect
            '+bezierPathWithRoundedRect:cornerRadius:$':
                name: fromRoundedRect
            '-addArcWithCenter:radius:startAngle:endAngle:clockwise:$':
                name: addArc
            '-addCurveToPoint:controlPoint1:controlPoint2:$':
                name: addCurve
            '-addLineToPoint:$':
                name: addLine
            '-addQuadCurveToPoint:controlPoint:$':
                name: addQuadCurve
            '-fillWithBlendMode:alpha:$':
                name: fill
            '-moveToPoint:$':
                name: move
            '-strokeWithBlendMode:alpha:$':
                name: stroke
            '-bezierPathByReversingPath$':
                name: reverse
    ^UIButton$:
        methods:
            '+buttonWithType:$':
                return_type: UIButton
                name: fromType
            '-backgroundImageForState:$':
                name: getBackgroundImage
            '-backgroundRectForBounds:$':
                name: getBackgroundRect
            '-contentRectForBounds:$':
                name: getContentRect
            '-imageForState:$':
                name: getImage
            '-imageRectForContentRect:$':
                name: getImageRect
            '-titleColorForState:$':
                name: getTitleColor
            '-titleForState:$':
                name: getTitle
            '-titleShadowColorForState:$':
                name: getTitleShadowColor
            '-titleRectForContentRect:$':
                name: getTitleRect
            '-attributedTitleForState:$':
                name: getAttributedTitle
    ^UICollectionReusableView$:
        methods:
            '-didTransitionFromLayout:toLayout:$':
                name: didTransition
            '-willTransitionFromLayout:toLayout:$':
                name: willTransition
    ^UICollectionView$:
        methods:
            '-cellForItemAtIndexPath:$':
                name: getItemCell
            '-deleteItemsAtIndexPaths:$':
                name: deleteItems
            '-dequeueReusableCellWithReuseIdentifier:forIndexPath:$':
                name: dequeueReusableCell
            '-dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:$':
                name: dequeueReusableSupplementaryView
            '-deselectItemAtIndexPath:animated:$':
                name: deselectItem
            '-indexPathForCell:$':
                name: getCellIndexPath
            '-indexPathForItemAtPoint:$':
                name: getItemIndexPath
            '-indexPathsForSelectedItems$':
                name: getSelectedItemsIndexPaths
            '-indexPathsForVisibleItems$':
                name: getVisibleItemsIndexPaths
            '-insertItemsAtIndexPaths:$':
                name: insertItems
            '-layoutAttributesForItemAtIndexPath:$':
                name: getItemLayoutAttributes
            '-layoutAttributesForSupplementaryElementOfKind:atIndexPath:$':
                name: getSupplementaryElementLayoutAttributes
            '-moveItemAtIndexPath:toIndexPath:$':
                name: moveItem
            '-numberOfItemsInSection:$':
                name: getNumberOfItemsInSection
            '-numberOfSections$':
                name: getNumberOfSections
            '-registerClass:forCellWithReuseIdentifier:$':
                name: registerReusableCellClass
            '-registerClass:forSupplementaryViewOfKind:withReuseIdentifier:$':
                name: registerReusableSupplementaryViewClass
            '-registerNib:forCellWithReuseIdentifier:$':
                name: registerReusableCellNib
            '-registerNib:forSupplementaryViewOfKind:withReuseIdentifier:$':
                name: registerReusableSupplementaryViewNib
            '-reloadItemsAtIndexPaths:$':
                name: reloadItems
            '-scrollToItemAtIndexPath:atScrollPosition:animated:$':
                name: scrollToItem
            '-selectItemAtIndexPath:animated:scrollPosition:$':
                name: selectItem
            '-visibleCells$':
                name: getVisibleCells
    ^UICollectionViewCell$: {}
    ^UICollectionViewController$: {}
        # protocols: []
    ^UICollectionViewFlowLayout$: {}
    ^UICollectionViewFlowLayoutInvalidationContext$: {}
    ^UICollectionViewLayout$:
        methods:
            '+layoutAttributesClass$':
                name: getLayoutAttributesClass
            '-collectionViewContentSize$':
                name: getCollectionViewContentSize
            '-finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:$':
                name: getFinalLayoutAttributesForDisappearingDecorationElement
            '-finalLayoutAttributesForDisappearingItemAtIndexPath:$':
                name: getFinalLayoutAttributesForDisappearingItem
            '-finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:$':
                name: getFinalLayoutAttributesForDisappearingSupplementaryElement
            '-initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:$':
                name: getInitialLayoutAttributesForAppearingDecorationElement
            '-initialLayoutAttributesForAppearingItemAtIndexPath:$':
                name: getInitialLayoutAttributesForAppearingItem
            '-initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:$':
                name: getInitialLayoutAttributesForAppearingSupplementaryElement
            '-layoutAttributesForDecorationViewOfKind:atIndexPath:$':
                name: getLayoutAttributesForDecorationView
            '-layoutAttributesForElementsInRect:$':
                name: getLayoutAttributesForElements
            '-layoutAttributesForItemAtIndexPath:$':
                name: getLayoutAttributesForItem
            '-layoutAttributesForSupplementaryViewOfKind:atIndexPath:$':
                name: getLayoutAttributesForSupplementaryView
            '-registerClass:forDecorationViewOfKind:$':
                name: registerDecorationViewClass
            '-registerNib:forDecorationViewOfKind:$':
                name: registerDecorationViewNib
            '-targetContentOffsetForProposedContentOffset:withScrollingVelocity:$':
                name: getTargetContentOffset
    ^UICollectionViewLayoutAttributes$:
        methods:
            '+layoutAttributesForCellWithIndexPath:$':
                name: createForCell
            '+layoutAttributesForDecorationViewOfKind:withIndexPath:$':
                name: createForDecorationView
            '+layoutAttributesForSupplementaryViewOfKind:withIndexPath:$':
                name: createForSupplementaryView
    ^UICollectionViewLayoutInvalidationContext$: {}
    ^UICollectionViewTransitionLayout$: {}
    ^UICollectionViewUpdateItem$: {}
    ^UICollisionBehavior$: {}
    ^UIColor$:
        methods:
            '-initWithHue:saturation:brightness:alpha:$':
                exclude: true
            '-initWithPatternImage:$':
                exclude: true
            '-initWithWhite:alpha:$':
                exclude: true
#            '+blackColor$':
#                name: black
#            '+blueColor$':
#                name: blue
#            '+brownColor$':
#                name: brown
#            '+clearColor$':
#                name: clear
#            '+blackColor$':
#                name: black
#            '+cyanColor$':
#                name: cyan
#            '+darkGrayColor$':
#                name: darkGray
#            '+greenColor$':
#                name: green
#            '+lightGrayColor$':
#                name: lightGray
#            '+magentaColor$':
#                name: magenta
#            '+orangeColor$':
#                name: orange
#            '+purpleColor$':
#                name: purple
#            '+redColor$':
#                name: red
#            '+whiteColor$':
#                name: white
#            '+yellowColor$':
#                name: yellow
            '+colorWithCGColor:$':
                name: fromCGColor
            '+colorWithCIColor:$':
                name: fromCIColor
            '+colorWithHue:saturation:brightness:alpha:$':
                name: fromHSBA
            '+colorWithRed:green:blue:alpha:$':
                name: fromRGBA
            '+colorWithPatternImage:$':
                name: fromPatternImage
            '+colorWithWhite:alpha:$':
                name: fromWhiteAlpha
            '-colorWithAlphaComponent:$':
                name: colorWithAlpha
            '-getHue:saturation:brightness:alpha:$':
                name: getHSBA
            '-getRed:green:blue:alpha:$':
                name: getRGBA
            '-getWhite:alpha:$':
                name: getWhiteAlpha
            '-set$':
                name: setFillAndStroke
    ^UIControl$:
        methods:
            '-actionsForTarget:forControlEvent:$':
                name: getActions
            '-allControlEvents$':
                name: getAllControlEvents
            '-allTargets$':
                name: getAllTargets
            '-beginTrackingWithTouch:withEvent:$':
                name: beginTracking
            '-cancelTrackingWithEvent:$':
                name: cancelTracking
            '-continueTrackingWithTouch:withEvent:$':
                name: continueTracking
            '-endTrackingWithTouch:withEvent:$':
                name: endTracking
            '-sendActionsForControlEvents:$':
                name: sendControlEventsActions
    ^UIDatePicker$: {}
    ^UIDevice$:
        properties:
            'identifierForVendor$':
                name: vendorIdentifier
        methods:
            '+currentDevice$':
                name: getCurrentDevice
    ^UIDictationPhrase$: {}
    ^UIDocument$:
        # protocols: []
        methods:
            '-savingFileType$':
                name: getSavingFileType
            '-autosaveWithCompletionHandler:$':
                name: autoSave
            '-closeWithCompletionHandler:$':
                name: close
            "-fileAttributesToWriteToURL:forSaveOperation:error:":
                name: getFileAttributesToWrite
            "-fileNameExtensionForType:saveOperation:":
                name: getFileNameExtension
            "-openWithCompletionHandler:":
                name: open
            "-performAsynchronousFileAccessUsingBlock:":
                name: performAsynchronousFileAccess
            "-readFromURL:error:":
                name: read
            "-revertToContentsOfURL:completionHandler:":
                name: revert
            "-saveToURL:forSaveOperation:completionHandler:":
                name: save
            "-updateChangeCountWithToken:forSaveOperation:":
                name: updateChangeCount
    ^UIDocumentInteractionController$:
        # protocols: []
        methods:
            "+interactionControllerWithURL:":
                name: fromURL
            '-dismissMenuAnimated:$':
                name: dismissMenu
            '-dismissPreviewAnimated:$':
                name: dismissPreview
            '-presentOpenInMenuFromBarButtonItem:animated:$':
                name: presentOpenInMenu
            '-presentOpenInMenuFromRect:inView:animated:$':
                name: presentOpenInMenu
            '-presentOptionsMenuFromBarButtonItem:animated:$':
                name: presentOptionsMenu
            '-presentOptionsMenuFromRect:inView:animated:$':
                name: presentOptionsMenu
            '-presentPreviewAnimated:$':
                name: presentPreview
    ^UIDynamicAnimator$: {}
    ^UIDynamicBehavior$: {}
    ^UIDynamicItemBehavior$: {}
    ^UIEvent$:
        methods:
            '-allTouches$':
                name: getAllTouches
            '-touchesForGestureRecognizer:$':
                name: getTouches
            '-touchesForView:$':
                name: getTouches
            '-touchesForWindow:$':
                name: getTouches
    ^UIFont$:
        methods:
            '+boldSystemFontOfSize:$':
                name: getBoldSystemFont
            '+fontNamesForFamilyName:$':
                name: getFontNamesForFamilyName
            '+buttonFontSize$':
                name: getButtonFontSize
            '+familyNames$':
                name: getFamilyNames
            '+italicSystemFontOfSize:$':
                name: getItalicSystemFont
            '+labelFontSize$':
                name: getLabelFontSize
            '+smallSystemFontSize$':
                name: getSmallSystemFontSize
            '+systemFontOfSize:$':
                name: getSystemFont
            '+systemFontSize$':
                name: getSystemFontSize
            '+fontWithName:size:$':
                name: getFont
            '-fontWithSize:$':
                name: getFontWithSize
    ^UIFontDescriptor$: {}
    ^UIGestureRecognizer$:
        methods:
            '-locationInView:$':
                name: getLocation
            '-locationOfTouch:inView:$':
                name: getLocation
            '-numberOfTouches$':
                name: getNumberOfTouches
    ^UIGravityBehavior$: {}
    ^UIImage$:
        methods:
            '+animatedImageNamed:duration:$':
                name: createAnimated
            '+animatedImageWithImages:duration:$':
                name: createAnimated
            '+animatedResizableImageNamed:capInsets:duration:$':
                name: createAnimatedResizable
            '+animatedResizableImageNamed:capInsets:resizingMode:duration:$':
                name: createAnimatedResizable
            '+imageNamed:$':
                name: fromBundle
            '+imageWithContentsOfFile:$':
                name: fromFile
            '+imageWithCGImage:$':
                name: fromImage
            '+imageWithCGImage:scale:orientation:$':
                name: fromImage
            '+imageWithCIImage:$':
                name: fromImage
            '+imageWithData:$':
                name: fromData
            '+imageWithCIImage:scale:orientation:$':
                name: fromImage
            '+imageWithData:scale:$':
                name: fromData
            '-resizableImageWithCapInsets:$':
                name: copyWithCapInsets
            '-resizableImageWithCapInsets:resizingMode:$':
                name: copyWithCapInsets
            '-imageWithAlignmentRectInsets:$':
                name: copyWithAlignmentRectInsets
            '-drawAtPoint:$':
                name: draw
            '-drawAtPoint:blendMode:alpha:$':
                name: draw
            '-drawInRect:$':
                name: draw
            '-drawInRect:blendMode:alpha:$':
                name: draw
            '-drawAsPatternInRect:$':
                name: drawAsPattern
        properties:
            'imageOrientation$':
                name: orientation
    ^UIImagePickerController$:
        methods:
            '+availableCaptureModesForCameraDevice:$':
                name: getAvailableCaptureModes
            '+availableMediaTypesForSourceType:$':
                name: getAvailableMediaTypes
        properties:
            'delegate$':
                type: UIImagePickerControllerDelegate
    ^UIImageView$: {}
    ^UIInputView$: {}
    ^UIInterpolatingMotionEffect$: {}
    ^UIKeyCommand$: {}
    ^UILabel$:
        methods:
            '-drawTextInRect:$':
                name: drawText
            '-textRectForBounds:limitedToNumberOfLines:$':
                name: getTextRect
    ^UILocalizedIndexedCollation$:
        methods:
            '+currentCollation$':
                name: getCurrentCollation
            '-sectionForObject:collationStringSelector:$':
                name: getSectionForObject
            '-sectionForSectionIndexTitleAtIndex:$':
                name: getSectionForSectionIndexTitle
            '-sortedArrayFromArray:collationStringSelector:$':
                name: sortArray
    ^UILocalNotification$: {}
    ^UILongPressGestureRecognizer$: {}
    ^UIManagedDocument$:
        methods:
            "+persistentStoreName":
                name: getPersistentStoreName
            "-additionalContentForURL:error:":
                name: getAdditionalContent
            "-configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:":
                name: configurePersistentStoreCoordinator
            "-persistentStoreTypeForFileType:":
                name: getPersistentStoreType
            "-readAdditionalContentFromURL:error:":
                name: readAdditionalContent
    ^UIMarkupTextPrintFormatter$: {}
    ^UIMenuController$:
        methods:
            '+sharedMenuController$':
                name: getSharedMenuController
    ^UIMenuItem$: {}
    ^UIMotionEffect$: {}
    ^UIMotionEffectGroup$: {}
    ^UINavigationBar$:
        methods:
            '-backgroundImageForBarMetrics:$':
                name: getBackgroundImage
            '-popNavigationItemAnimated:$':
                name: popNavigationItem
            '-titleVerticalPositionAdjustmentForBarMetrics:$':
                name: getTitleVerticalPositionAdjustment
    ^UINavigationController$:
        methods:
            '-popToRootViewControllerAnimated:$':
                name: popToRootViewController
#        properties:
#            'delegate$':
#                name: navigationControllerDelegate
    ^UINavigationItem$: {}
    ^UINib$:
        methods:
            '+nibWithData:bundle:$':
                name: fromData
            '+nibWithNibName:bundle:$':
                name: fromName
            '-instantiateWithOwner:options:$':
                name: instantiate
    ^UIPageControl$:
        methods:
            '-sizeForNumberOfPages:$':
                name: getSizeForNumberOfPages
    ^UIPageViewController$: {}
    ^UIPanGestureRecognizer$:
        methods: 
            '-translationInView:$':
                name: getTranslation
            '-velocityInView:$':
                name: getVelocity
    ^UIPasteboard$:
        methods:
            '+generalPasteboard$':
                name: getGeneral
            '+pasteboardWithUniqueName$':
                name: getUnique
            '+pasteboardWithName:create:$':
                name: fromName
            '+removePasteboardWithName:$':
                name: remove
            '-pasteboardTypes$':
                name: getTypes
            '-containsPasteboardTypes:$':
                name: contains
            '-containsPasteboardTypes:inItemSet:$':
                name: contains
            '-dataForPasteboardType:$':
                name: getData
            '-dataForPasteboardType:inItemSet:$':
                name: getData
            '-itemSetWithPasteboardTypes:$':
                name: getItemsWithTypes
            '-pasteboardTypesForItemSet:$':
                name: getTypes
            '-valueForPasteboardType:$':
                name: getValue
            '-valuesForPasteboardType:inItemSet:$':
                name: getValues
        properties:
            'numberOfItems$':
                name: count
    ^UIPercentDrivenInteractiveTransition$: {}
    ^UIPickerView$:
        # protocols: []
        methods:
            '-numberOfRowsInComponent:$':
                name: getNumberOfRows
            '-reloadAllComponents$':
                name: reloadAllComponents
            '-reloadComponent:$':
                name: reloadComponent
            '-rowSizeForComponent:$':
                name: getRowSize
            '-selectedRowInComponent:$':
                name: getSelectedRow
            '-selectRow:inComponent:animated:$':
                name: selectRow
            '-viewForRow:forComponent:$':
                name: getRowView
    ^UIPinchGestureRecognizer$: {}
    ^UIPopoverBackgroundView$:
        methods:
            '+arrowBase$':
                name: getArrowBase
            '+arrowHeight$':
                name: getArrowHeight
            '+contentViewInsets$':
                name: getContentViewInsets
    ^UIPopoverController$:
        methods:
            '-dismissPopoverAnimated:$':
                name: dismiss
            '-presentPopoverFromBarButtonItem:permittedArrowDirections:animated:$':
                name: presentFromBarButtonItem
            '-presentPopoverFromRect:inView:permittedArrowDirections:animated:$':
                name: presentFromRectInView
    ^UIPrintFormatter$:
        methods:
            '-drawInRect:forPageAtIndex:$':
                name: draw
            '-rectForPageAtIndex:$':
                name: getRectForPage
    ^UIPrintInfo$:
        methods:
            '+printInfo$':
                name: getPrintInfo
            '+printInfoWithDictionary:$':
                name: fromDictionary
            '-dictionaryRepresentation$':
                name: toDictionary
    ^UIPrintInteractionController$:
        methods:
            '+canPrintData:$':
                name: canPrint
            "+canPrintURL:":
                name: canPrint
            '+printableUTIs$':
                name: getPrintableUTIs
            '+sharedPrintController$':
                name: getSharedPrintController
            '-dismissAnimated:$':
                name: dismiss
            '-presentAnimated:completionHandler:$':
                name: present
                exclude: true # TODO: enable once we now how to handle blocks
            '-presentFromRect:inView:animated:completionHandler:$':
                name: presentFromRectInView
                exclude: true # TODO: enable once we now how to handle blocks
            '-presentFromBarButtonItem:animated:completionHandler:$':
                exclude: true # TODO: enable once we now how to handle blocks
    ^UIPrintPageRenderer$:
        methods:
            '-numberOfPages$':
                name: getNumberOfPages
            '-drawContentForPageAtIndex:inRect:$':
                name: drawContent
            '-drawFooterForPageAtIndex:inRect:$':
                name: drawFooter
            '-drawHeaderForPageAtIndex:inRect:$':
                name: drawHeader
            '-drawPageAtIndex:inRect:$':
                name: drawPage
            '-drawPrintFormatter:forPageAtIndex:$':
                name: drawPrintFormatter
            '-printFormattersForPageAtIndex:$':
                name: getPrintFormatters
    ^UIPrintPaper$:
        methods:
            '+bestPaperForPageSize:withPapersFromArray:$':
                name: forPageSize
    ^UIProgressView$: {}
    ^UIPushBehavior$: {}
    ^UIReferenceLibraryViewController$: {}
    ^UIRefreshControl$:
        # protocols: []
        methods:
            '-init$':
                exclude: true
    ^UIResponder$:
        methods:
            '-nextResponder$':
                name: getNextResponder
            '-remoteControlReceivedWithEvent:$':
                name: remoteControlReceived
    ^UIRotationGestureRecognizer$: {}
    ^UIScreen$:
        methods:
            '+mainScreen$':
                name: getMainScreen
            '+screens$':
                name: getScreens
            '-displayLinkWithTarget:selector:$':
                name: createDisplayLink
    ^UIScreenEdgePanGestureRecognizer$: {}
    ^UIScreenMode$: {}
    ^UIScrollView$: {}
    ^UISearchBar$:
        methods:
            '-imageForSearchBarIcon:state:$':
                name: getImageForSearchBarIcon
            '-positionAdjustmentForSearchBarIcon:$':
                name: getPositionAdjustmentForSearchBarIcon
            '-scopeBarButtonBackgroundImageForState:$':
                name: getScopeBarButtonBackgroundImage
            '-scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:$':
                name: getScopeBarButtonDividerImage
            '-scopeBarButtonTitleTextAttributesForState:$':
                name: getScopeBarButtonTitleTextAttributes
            '-searchFieldBackgroundImageForState:$':
                name: getSearchFieldBackgroundImage
            '-setImage:forSearchBarIcon:state:$':
                name: setImageForSearchBarIcon
            '-setPositionAdjustment:forSearchBarIcon:$':
                name: setPositionAdjustmentForSearchBarIcon
    ^UISearchDisplayController$: {}
    ^UISegmentedControl$:
        methods:
            '-backgroundImageForState:barMetrics:$':
                name: getBackgroundImage
            '-contentOffsetForSegmentAtIndex:$':
                name: getSegmentContentOffset
            '-contentPositionAdjustmentForSegmentType:barMetrics:$':
                name: getSegmentContentPositionAdjustment
            '-dividerImageForLeftSegmentState:rightSegmentState:barMetrics:$':
                name: getDividerImage
            '-imageForSegmentAtIndex:$':
                name: getSegmentImage
            '-insertSegmentWithImage:atIndex:animated:$':
                name: insertSegment
            '-insertSegmentWithTitle:atIndex:animated:$':
                name: insertSegment
            '-isEnabledForSegmentAtIndex:$':
                name: isSegmentEnabled
            '-widthForSegmentAtIndex:$':
                name: getSegmentWidth
            '-titleForSegmentAtIndex:$':
                name: getSegmentTitle
            '-titleTextAttributesForState:$':
                name: getTitleTextAttributes
        properties:
            'segmentedControlStyle$':
                name: controlStyle
            'selectedSegmentIndex$':
                name: selectedSegment
    ^UISimpleTextPrintFormatter$: {}
    ^UISlider$:
        methods:
            '-maximumTrackImageForState:$':
                name: getMaximumTrackImage
            '-maximumValueImageRectForBounds:$':
                name: getMaximumValueImageRect
            '-minimumTrackImageForState:$':
                name: getMinimumTrackImage
            '-minimumValueImageRectForBounds:$':
                name: getMinimumValueImageRect
            '-thumbImageForState:$':
                name: getThumbImage
            '-thumbRectForBounds:trackRect:value:$':
                name: getThumbRect
            '-trackRectForBounds:$':
                name: getTrackRect
    ^UISnapBehavior$: {}
    ^UISplitViewController$: {}
    ^UIStepper$:
        methods:
            '-backgroundImageForState:$':
                name: getBackgroundImage
            '-decrementImageForState:$':
                name: getDecrementImage
            '-dividerImageForLeftSegmentState:rightSegmentState:$':
                name: getDividerImage
                parameters:
                    0: {name: leftState}
                    1: {name: rightState}
            '-incrementImageForState:$':
                name: getIncrementImage
            '-setBackgroundImage:forState:$':
                name: setBackgroundImage
            '-setDividerImage:forLeftSegmentState:rightSegmentState:$':
                name: setDividerImage
            '-setIncrementImage:forState:$':
                name: setIncrementImage
            '-setDecrementImage:forState:$':
                name: setDecrementImage
    ^UIStoryboard$:
        methods:
            '+storyboardWithName:bundle:$':
                name: fromName
            '-instantiateViewControllerWithIdentifier:$':
                name: instantiateViewController
    ^UIStoryboardPopoverSegue$: {}
    ^UIStoryboardSegue$:
        methods:
            '+segueWithIdentifier:source:destination:performHandler:$':
                name: getSegue
    ^UISwipeGestureRecognizer$: {}
    ^UISwitch$: {}
    ^UITabBar$:
        methods:
            '-beginCustomizingItems:$':
                name: beginCustomizing
            '-endCustomizingAnimated:$':
                name: endCustomizing
    ^UITabBarController$: {}
        # protocols: []
    ^UITabBarItem$:
        methods:
            '-finishedSelectedImage$':
                name: getFinishedSelectedImage
            '-finishedUnselectedImage$':
                name: getFinishedUnselectedImage
            '-setFinishedSelectedImage:withFinishedUnselectedImage:$':
                name: setFinishedImages
            '-titlePositionAdjustment$':
                name: getTitlePositionAdjustment
    ^UITableView$:
        methods:
            '-cellForRowAtIndexPath:$':
                name: getRowCell
            '-deleteRowsAtIndexPaths:withRowAnimation:$':
                name: deleteRows
            '-dequeueReusableCellWithIdentifier:$':
                name: dequeueReusableCell
            '-dequeueReusableCellWithIdentifier:forIndexPath:$':
                name: dequeueReusableCell
            '-dequeueReusableHeaderFooterViewWithIdentifier:$':
                name: dequeueReusableHeaderFooterView   
            '-deselectRowAtIndexPath:animated:$':
                name: deselectRow
            '-indexPathForCell:$':
                name: getCellIndexPath
            '-indexPathForRowAtPoint:$':
                name: getRowIndexPath
            '-indexPathForSelectedRow$':
                name: getSelectedRowIndexPath
            '-indexPathsForRowsInRect:$':
                name: getRowsIndexPaths
            '-indexPathsForSelectedRows$':
                name: getSelectedRowsIndexPaths
            '-indexPathsForVisibleRows$':
                name: getVisibleRowsIndexPaths
            '-insertRowsAtIndexPaths:withRowAnimation:$':
                name: insertRows
            '-moveRowAtIndexPath:toIndexPath:$':
                name: moveRow
            '-numberOfRowsInSection:$':
                name: getNumberOfRowsInSection
            '-numberOfSections$':
                name: getNumberOfSections
            '-rectForFooterInSection:$':
                name: getSectionFooterRect
            '-rectForHeaderInSection:$':
                name: getSectionHeaderRect
            '-rectForRowAtIndexPath:$':
                name: getRowRect
            '-rectForSection:$':
                name: getSectionRect
            '-registerNib:forCellReuseIdentifier:$':
                name: registerReusableCellNib
            '-registerClass:forCellReuseIdentifier:$':
                name: registerReusableCellClass
            '-reloadRowsAtIndexPaths:withRowAnimation:$':
                name: reloadRows
            '-scrollToNearestSelectedRowAtScrollPosition:animated:$':
                name: scrollToNearestSelectedRow
            '-scrollToRowAtIndexPath:atScrollPosition:animated:$':
                name: scrollToRow
            '-selectRowAtIndexPath:animated:scrollPosition:$':
                name: selectRow
            '-visibleCells$':
                name: getVisibleCells
            '-registerClass:forHeaderFooterViewReuseIdentifier:$':
                name: registerReusableHeaderFooterViewClass
            '-registerNib:forHeaderFooterViewReuseIdentifier:$':
                name: registerReusableHeaderFooterViewNib
            '-footerViewForSection:$':
                name: getSectionFooterView
            '-headerViewForSection:$':
                name: getSectionHeaderView
    ^UITableViewCell$: {}
        # protocols: []
    ^UITableViewController$: {}
        # protocols: []
    ^UITableViewHeaderFooterView$: {}
        # protocols: []
    ^UITapGestureRecognizer$: {}
    ^UITextField$:
        methods:
            '-baseWritingDirectionForPosition:inDirection:$':
                name: getBaseWritingDirection
            '-borderRectForBounds:$':
                name: getBorderRect
            '-caretRectForPosition:$':
                name: getCaretRect
            '-characterOffsetOfPosition:withinRange:$':
                name: getCharacterOffset
            '-characterRangeAtPoint:$':
                name: getCharacterRange
            '-characterRangeByExtendingPosition:inDirection:$':
                name: getCharacterRange
            '-clearButtonRectForBounds:$':
                name: clearButtonRect
            '-closestPositionToPoint:$':
                name: getClosestPosition
            '-closestPositionToPoint:withinRange:$':
                name: getClosestPosition
            '-comparePosition:toPosition:$':
                name: comparePositions
            '-drawPlaceholderInRect:$':
                name: drawPlaceholder
            '-drawTextInRect:$':
                name: drawText
            '-editingRectForBounds:$':
                name: getEditingRect
            '-firstRectForRange:$':
                name: getFirstRect
            '-leftViewRectForBounds:$':
                name: getLeftViewRect
            '-offsetFromPosition:toPosition:$':
                name: getOffset
            '-placeholderRectForBounds:$':
                name: getPlaceholderRect
            '-positionFromPosition:offset:$':
                name: getPosition
            '-positionFromPosition:inDirection:offset:$':
                name: getPosition
            '-positionWithinRange:farthestInDirection:$':
                name: getPosition
            '-positionWithinRange:atCharacterOffset:$':
                name: getPosition
            '-replaceRange:withText:$':
                name: replaceText
            '-rightViewRectForBounds:$':
                name: getRightViewRect
            '-textRangeFromPosition:toPosition:$':
                name: getTextRange
            '-textInRange:$':
                name: getText
            '-textRectForBounds:$':
                name: getTextRect
            '-textStylingAtPosition:inDirection:$':
                name: getTextStyling
            '-frameForDictationResultPlaceholder:$':
                name: getDictationResultPlaceholderFrame
            '-selectionRectsForRange:$':
                name: getSelectionRects
            '-shouldChangeTextInRange:replacementText:$':
                name: shouldChangeText
    ^UITextInputMode$:
        methods:
            '+activeInputModes$':
                name: getActiveInputModes
            '+currentInputMode$':
                name: getCurrentInputMode
    ^UITextInputStringTokenizer$:
        methods: 
            '-initWithTextInput:$':
                parameters:
                    textInput:
                        type: UITextInput
            '-positionFromPosition:toBoundary:inDirection:$':
                name: getPosition
            '-rangeEnclosingPosition:withGranularity:inDirection:$':
                name: getRangeEnclosingPosition
            '-isPosition:atBoundary:inDirection:$':
                name: isPositionAtBoundary
            '-isPosition:withinTextUnit:inDirection:$':
                name: isPositionWithinTextUnit
    ^UITextPosition$: {}
    ^UITextRange$: {}
    ^UITextSelectionRect$:
        properties:
            'isVertical$':
                name: vertical
    ^UITextView$:
        methods:
            '-baseWritingDirectionForPosition:inDirection:$':
                name: getBaseWritingDirection
            '-borderRectForBounds:$':
                name: getBorderRect
            '-caretRectForPosition:$':
                name: getCaretRect
            '-characterOffsetOfPosition:withinRange:$':
                name: getCharacterOffset
            '-characterRangeAtPoint:$':
                name: getCharacterRange
            '-characterRangeByExtendingPosition:inDirection:$':
                name: getCharacterRange
            '-clearButtonRectForBounds:$':
                name: clearButtonRect
            '-closestPositionToPoint:$':
                name: getClosestPosition
            '-closestPositionToPoint:withinRange:$':
                name: getClosestPosition
            '-comparePosition:toPosition:$':
                name: comparePositions
            '-drawPlaceholderInRect:$':
                name: drawPlaceholder
            '-drawTextInRect:$':
                name: drawText
            '-editingRectForBounds:$':
                name: getEditingRect
            '-firstRectForRange:$':
                name: getFirstRect
            '-leftViewRectForBounds:$':
                name: getLeftViewRect
            '-offsetFromPosition:toPosition:$':
                name: getOffset
            '-placeholderRectForBounds:$':
                name: getPlaceholderRect
            '-positionFromPosition:offset:$':
                name: getPosition
            '-positionFromPosition:inDirection:offset:$':
                name: getPosition
            '-positionWithinRange:farthestInDirection:$':
                name: getPosition
            '-positionWithinRange:atCharacterOffset:$':
                name: getPosition
            '-replaceRange:withText:$':
                name: replaceText
            '-rightViewRectForBounds:$':
                name: getRightViewRect
            '-textRangeFromPosition:toPosition:$':
                name: getTextRange
            '-textInRange:$':
                name: getText
            '-textRectForBounds:$':
                name: getTextRect
            '-textStylingAtPosition:inDirection:$':
                name: getTextStyling
            '-frameForDictationResultPlaceholder:$':
                name: getDictationResultPlaceholderFrame
            '-selectionRectsForRange:$':
                name: getSelectionRects
            '-shouldChangeTextInRange:replacementText:$':
                name: shouldChangeText
    ^UIToolbar$:
        methods:
            '-backgroundImageForToolbarPosition:barMetrics:$':
                name: getBackgroundImage
            '-shadowImageForToolbarPosition:$':
                name: getShadowImage
    ^UITouch$:
        methods:
            '-locationInView:$':
                name: getLocation
            '-previousLocationInView:$':
                name: getPreviousLocation
    ^UIVideoEditorController$:
        methods:
            '+canEditVideoAtPath:$':
                name: canEditVideo
        properties:
            'delegate$':
                type: UIVideoEditorControllerDelegate
    ^UIView$:
        methods:
            '+animateWithDuration:animations:$':
                name: animate
            '+animateWithDuration:animations:completion:$':
                name: animate
            '+animateWithDuration:delay:options:animations:completion:$':
                name: animate
            '+transitionFromView:toView:duration:options:completion:$':
                name: transition
            '+transitionWithView:duration:options:animations:completion:$':
                name: transition
            '+layerClass$':
                name: getLayerClass
#            '+setAnimationDidStopSelector:$':
#                parameters:
#                    selector: 
#                        type: AnimationDidStopAction
#                        name: action
#                name: setAnimationDidStopAction
#            '+setAnimationWillStartSelector:$':
#                parameters:
#                    selector: 
#                        type: AnimationDidStartAction
#                        name: action
#                name: setAnimationWillStartAction
            '-convertPoint:fromView:$':
                name: convertPointFromView
            '-convertPoint:toView:$':
                name: convertPointToView
            '-convertRect:fromView:$':
                name: convertRectFromView
            '-convertRect:toView:$':
                name: convertRectToView
            '-insertSubview:aboveSubview:$':
                name: 'insertSubviewAbove'
            '-insertSubview:belowSubview:$':
                name: 'insertSubviewBelow'
            '-isDescendantOfView:$':
                name: isDescendantOf
#            '-didAddSubview:$':
#                name: subviewAdded
#            '-didMoveToSuperview$':
#                name: movedToSuperview
#            '-didMoveToWindow$':
#                name: movedToWindow
            '-drawRect:$':
                name: draw
            '-exchangeSubviewAtIndex:withSubviewAtIndex:$':
                name: exchangeSubview
            '-viewPrintFormatter$':
                name: getViewPrintFormatter
            '-setNeedsDisplayInRect:$':
                name: setNeedsDisplay
            '-viewWithTag:$':
                name: getViewWithTag
            '-sizeThatFits:$':
                name: getSizeThatFits
            '-sizeToFit$':
                name: resizeToFit
# Renamed since it conflicts with the animationDuration property in UIImageView. 
# The static method in UIView should not be used anymore so we rename it rather that the property in UIImageView.                
            '+setAnimationDuration:$':
                name: setDurationForAnimation
            '-contentCompressionResistancePriorityForAxis:$':
                name: getContentCompressionResistancePriority
            '-contentHuggingPriorityForAxis:$':
                name: getContentHuggingPriority
            '-alignmentRectForFrame:$':
                name: getFrameAlignmentRect
            '-alignmentRectInsets$':
                name: getAlignmentRectInsets
            '-constraints$':
                name: getConstraints
            '-constraintsAffectingLayoutForAxis:$':
                name: getConstraintsAffectingLayout
            '-frameForAlignmentRect:$':
                name: getAlignmentRectFrame
            '-intrinsicContentSize$':
                name: getIntrinsicContentSize
            '-systemLayoutSizeFittingSize:$':
                name: getSystemLayoutSizeFittingSize
            '-translatesAutoresizingMaskIntoConstraints$':
                name: isTranslatesAutoresizingMaskIntoConstraints
            '-viewForBaselineLayout$':
                name: getBaselineLayoutView
    ^UIViewController$:
        methods:
            '-rotatingFooterView$':
                name: getRotatingFooterView
            '-rotatingHeaderView$':
                name: getRotatingHeaderView
            '-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers$':
                name: isAutomaticallyForwardAppearanceAndRotationMethodsToChildViewControllers
            '-didRotateFromInterfaceOrientation:$':
                name: didRotate
            '-dismissModalViewControllerAnimated:$':
                name: dismissModalViewController
            '-dismissViewControllerAnimated:completion:$':
                name: dismissViewController
            '-performSegueWithIdentifier:sender:$':
                name: performSegue
            '-transitionFromViewController:toViewController:duration:options:animations:completion:$':
                name: transition
            '-willAnimateRotationToInterfaceOrientation:duration:$':
                name: willAnimateRotation
            '-willRotateToInterfaceOrientation:duration:$':
                name: willRotate
            '-willMoveToParentViewController:$':
                name: willMoveToParent
            '-editButtonItem$':
                name: getEditButtonItem
            '-decodeRestorableStateWithCoder:$':
                name: decodeRestorableState
            '-encodeRestorableStateWithCoder:$':
                name: encodeRestorableState
            '-preferredInterfaceOrientationForPresentation$':
                name: getPreferredInterfaceOrientation
            '-segueForUnwindingToViewController:fromViewController:identifier:$':
                name: getUnwindSegue
            '-shouldPerformSegueWithIdentifier:sender:$':
                name: shouldPerformSegue
            '-supportedInterfaceOrientations$':
                name: getSupportedInterfaceOrientations
                return_type: UIInterfaceOrientationMask
            '-viewControllerForUnwindSegueAction:fromViewController:withSender:$':
                name: getUnwindSegueActionViewController
        properties:
            'restorationClass$':
                type: ObjCClass
    ^UIViewPrintFormatter$: {}
    ^UIWebView$:
        # protocols: []
        methods:
            "-loadHTMLString:baseURL:":
                name: loadHTML
            '-stringByEvaluatingJavaScriptFromString:$':
                name: evaluateJavaScript
    ^UIWindow$:
        methods:
            '-convertPoint:fromWindow:$':
                name: convertPointFromWindow
            '-convertPoint:toWindow:$':
                name: convertPointToWindow
            '-convertRect:fromWindow:$':
                name: convertRectFromWindow
            '-convertRect:toWindow:$':
                name: convertRectToWindow
protocols:
    ^NSLayoutManagerDelegate$: {}
    ^NSTextAttachmentContainer$: {}
    ^NSTextLayoutOrientationProvider$: {}
    ^NSTextStorageDelegate$: {}
    ^UIAccelerometerDelegate$:
        methods:
            '-accelerometer:didAccelerate:$':
                name: didAccelerate
    ^UIAccessibilityIdentification$: {}
    ^UIActionSheetDelegate$:
        methods:
            '-actionSheet:clickedButtonAtIndex:$':
                name: clicked
            '-actionSheet:didDismissWithButtonIndex:$':
                name: didDismiss
            '-actionSheet:willDismissWithButtonIndex:$':
                name: willDismiss
            '-actionSheetCancel:$':
                name: cancel
            '-didPresentActionSheet:$':
                name: didPresent
            '-willPresentActionSheet:$':
                name: willPresent
    ^UIActivityItemSource$:
        methods:
            '-activityViewController:itemForActivityType:$':
                name: getItem
            '-activityViewControllerPlaceholderItem:$':
                name: getPlaceholderItem
    ^UIAlertViewDelegate$:
        methods:
            '-alertView:clickedButtonAtIndex:$':
                name: clicked
            '-alertView:didDismissWithButtonIndex:$':
                name: didDismiss
            '-alertView:willDismissWithButtonIndex:$':
                name: willDismiss
            '-alertViewCancel:$':
                name: cancel
            '-didPresentAlertView:$':
                name: didPresent
            '-willPresentAlertView:$':
                name: willPresent
            '-alertViewShouldEnableFirstOtherButton:$':
                name: shouldEnableFirstOtherButton
#    ^UIAppearance$: {}
#    ^UIAppearanceContainer$: {}
    ^UIApplicationDelegate$:
        methods:
            '-application:didChangeStatusBarFrame:$':
                name: didChangStatusBarFrame
            '-application:didChangeStatusBarOrientation:$':
                name: didChangStatusBarOrientation
            '-application:didFailToRegisterForRemoteNotificationsWithError:$':
                name: didFailToRegisterForRemoteNotifications
            '-application:didFinishLaunchingWithOptions:$':
                name: didFinishLaunching
            '-applicationDidFinishLaunching:$':
                name: didFinishLaunching
            '-application:didReceiveLocalNotification:$':
                name: didReceiveLocalNotification
            '-application:didReceiveRemoteNotification:$':
                name: didReceiveRemoteNotification
            '-application:didRegisterForRemoteNotificationsWithDeviceToken:$':
                name: didRegisterForRemoteNotifications
            "-application:handleOpenURL:":
                name: handleOpenURL
            "-application:openURL:sourceApplication:annotation:":
                name: openURL
            '-application:willChangeStatusBarFrame:$':
                name: willChangeStatusBarFrame
            '-application:willChangeStatusBarOrientation:duration:$':
                name: willChangeStatusBarOrientation
            '-applicationDidBecomeActive:$':
                name: didBecomeActive
            '-applicationDidEnterBackground:$':
                name: didEnterBackground
            '-applicationDidReceiveMemoryWarning:$':
                name: didReceiveMemoryWarning
            '-applicationProtectedDataDidBecomeAvailable:$':
                name: protectedDataDidBecomeAvailable
            '-applicationProtectedDataWillBecomeUnavailable:$':
                name: protectedDataWillBecomeUnavailable
            '-applicationSignificantTimeChange:$':
                name: significantTimeChange
            '-applicationWillEnterForeground:$':
                name: willEnterForeground
            '-applicationWillResignActive:$':
                name: willResignActive
            '-applicationWillTerminate:$':
                name: willTerminate
            '-application:shouldSaveApplicationState:$':
                name: shouldSaveApplicationState
            '-application:shouldRestoreApplicationState:$':
                name: shouldRestoreApplicationState
            '-application:didDecodeRestorableStateWithCoder:$':
                name: didDecodeRestorableState
            '-application:supportedInterfaceOrientationsForWindow:$':
                name: getSupportedInterfaceOrientations
            '-application:viewControllerWithRestorationIdentifierPath:coder:$':
                name: getViewController
            '-application:willEncodeRestorableStateWithCoder:$':
                name: willEncodeRestorableState
            '-application:willFinishLaunchingWithOptions:$':
                name: willFinishLaunching
    ^UIBarPositioning$: {}
    ^UIBarPositioningDelegate$: {}
    ^UICollectionViewDataSource$:
        methods:
            '-collectionView:cellForItemAtIndexPath:$':
                name: getItemCell
            '-collectionView:numberOfItemsInSection:$':
                name: getNumberOfItemsInSection
            '-collectionView:viewForSupplementaryElementOfKind:atIndexPath:$':
                name: getSupplementaryElementView
            '-numberOfSectionsInCollectionView:$':
                name: getNumberOfSections
    ^UICollectionViewDelegate$:
        methods:
            '-collectionView:canPerformAction:forItemAtIndexPath:withSender:$':
                name: canPerformAction
            '-collectionView:didDeselectItemAtIndexPath:$':
                name: didDeselectItem
            '-collectionView:didEndDisplayingCell:forItemAtIndexPath:$':
                name: didEndDisplayingCell
            '-collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:$':
                name: didEndDisplayingSupplementaryView
            '-collectionView:didHighlightItemAtIndexPath:$':
                name: didHighlightItem
            '-collectionView:didSelectItemAtIndexPath:$':
                name: didSelectItem
            '-collectionView:didUnhighlightItemAtIndexPath:$':
                name: didUnhighlightItem
            '-collectionView:performAction:forItemAtIndexPath:withSender:$':
                name: performAction
            '-collectionView:shouldDeselectItemAtIndexPath:$':
                name: shouldDeselectItem
            '-collectionView:shouldHighlightItemAtIndexPath:$':
                name: shouldHighlightItem
            '-collectionView:shouldSelectItemAtIndexPath:$':
                name: shouldSelectItem
            '-collectionView:shouldShowMenuForItemAtIndexPath:$':
                name: shouldShowMenuForItem
    ^UICollectionViewDelegateFlowLayout$:
        methods:
            '-collectionView:layout:insetForSectionAtIndex:$':
                name: getSectionInset
            '-collectionView:layout:minimumInteritemSpacingForSectionAtIndex:$':
                name: getSectionMinimumInteritemSpacing
            '-collectionView:layout:minimumLineSpacingForSectionAtIndex:$':
                name: getSectionMinimumLineSpacing
            '-collectionView:layout:referenceSizeForFooterInSection:$':
                name: getSectionFooterReferenceSize
            '-collectionView:layout:referenceSizeForHeaderInSection:$':
                name: getSectionHeaderReferenceSize
            '-collectionView:layout:sizeForItemAtIndexPath:$':
                name: getItemSize
    ^UICollisionBehaviorDelegate$: {}
    ^UIDataSourceModelAssociation$:
        methods:
            '-indexPathForElementWithModelIdentifier:inView:$':
                name: getElementIndexPath
            '-modelIdentifierForElementAtIndexPath:inView:$':
                name: getElementModelIdentifier
    ^UIDocumentInteractionControllerDelegate$:
        methods:
            '-documentInteractionController:canPerformAction:$':
                name: canPerformAction
            '-documentInteractionController:didEndSendingToApplication:$':
                name: didEndSendingToApplication
            '-documentInteractionController:performAction:$':
                name: performAction
            '-documentInteractionController:willBeginSendingToApplication:$':
                name: willBeginSendingToApplication
            '-documentInteractionControllerDidDismissOpenInMenu:$':
                name: didDismissOpenInMenu
            '-documentInteractionControllerDidDismissOptionsMenu:$':
                name: didDismissOptionsMenu
            '-documentInteractionControllerDidEndPreview:$':
                name: didEndPreview
            '-documentInteractionControllerRectForPreview:$':
                name: getRectForPreview
            '-documentInteractionControllerViewControllerForPreview:$':
                name: getViewControllerForPreview
            '-documentInteractionControllerViewForPreview:$':
                name: getViewForPreview
            '-documentInteractionControllerWillBeginPreview:$':
                name: willBeginPreview
            '-documentInteractionControllerWillPresentOpenInMenu:$':
                name: willPresentOpenInMenu
            '-documentInteractionControllerWillPresentOptionsMenu:$':
                name: willPresentOptionsMenu
    ^UIDynamicAnimatorDelegate$: {}
    ^UIDynamicItem$: {}
    ^UIGestureRecognizerDelegate$:
        methods:
            '-gestureRecognizer:shouldReceiveTouch:$':
                name: shouldReceiveTouch
            '-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:$':
                name: shouldRecognizeSimultaneously
            '-gestureRecognizerShouldBegin:$':
                name: shouldBegin
    ^UIGuidedAccessRestrictionDelegate$: {}
    ^UIImagePickerControllerDelegate$:
        protocols: [UINavigationControllerDelegate]
        methods:
            '-imagePickerController:didFinishPickingMediaWithInfo:$':
                name: didFinishPickingMedia
            '-imagePickerControllerDidCancel:$':
                name: didCancel
    ^UIKeyInput$: {}
    ^UILayoutSupport$: {}
    ^UINavigationBarDelegate$:
        methods:
            '-navigationBar:didPopItem:$':
                name: didPopItem
            '-navigationBar:didPushItem:$':
                name: didPushItem
            '-navigationBar:shouldPopItem:$':
                name: shouldPopItem
            '-navigationBar:shouldPushItem:$':
                name: shouldPushItem
    ^UINavigationControllerDelegate$:
        methods:
            '-navigationController:didShowViewController:animated:$':
                name: didShowViewController
            '-navigationController:willShowViewController:animated:$':
                name: willShowViewController
# Has a single static mehtdo
#    ^UIObjectRestoration$: {}
    ^UIPageViewControllerDataSource$:
        methods:
            '-pageViewController:viewControllerAfterViewController:$':
                name: getViewControllerAfter
            '-pageViewController:viewControllerBeforeViewController:$':
                name: getViewControllerBefore
            '-presentationCountForPageViewController:$':
                name: getPresentationCount
            '-presentationIndexForPageViewController:$':
                name: getPresentationIndex
    ^UIPageViewControllerDelegate$:
        methods:
            '-pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:$':
                name: didFinishAnimating
            '-pageViewController:spineLocationForInterfaceOrientation:$':
                name: getSpineLocation
            '-pageViewController:willTransitionToViewControllers:$':
                name: willTransition
    ^UIPickerViewAccessibilityDelegate$:
        methods:
            '-pickerView:accessibilityHintForComponent:$':
                name: getAccessibilityHint
            '-pickerView:accessibilityLabelForComponent:$':
                name: getAccessibilityLabel
    ^UIPickerViewDataSource$:
        methods:
            '-numberOfComponentsInPickerView:$':
                name: getNumberOfComponents
            '-pickerView:numberOfRowsInComponent:$':
                name: getNumberOfRows
    ^UIPickerViewDelegate$:
        methods:
            '-pickerView:didSelectRow:inComponent:$':
                name: didSelectRow
            '-pickerView:rowHeightForComponent:$':
                name: getRowHeight
            '-pickerView:titleForRow:forComponent:$':
                name: getRowTitle
            '-pickerView:viewForRow:forComponent:reusingView:$':
                name: getRowView
            '-pickerView:widthForComponent:$':
                name: getComponentWidth
            '-pickerView:attributedTitleForRow:forComponent:$':
                name: getAttributedRowTitle
    ^UIPopoverControllerDelegate$:
        methods:
            '-popoverControllerDidDismissPopover:$':
                name: didDismissPopover
            '-popoverControllerShouldDismissPopover:$':
                name: shouldDismissPopover
    ^UIPrintInteractionControllerDelegate$:
        methods:
            '-printInteractionController:choosePaper:$':
                name: choosePaper
            '-printInteractionControllerDidDismissPrinterOptions:$':
                name: didDismissPrinterOptions
            '-printInteractionControllerDidFinishJob:$':
                name: didFinishJob
            '-printInteractionControllerDidPresentPrinterOptions:$':
                name: didPresentPrinterOptions
            '-printInteractionControllerParentViewController:$':
                name: getParentViewController
            '-printInteractionControllerWillDismissPrinterOptions:$':
                name: willDismissPrinterOptions
            '-printInteractionControllerWillPresentPrinterOptions:$':
                name: willPresentPrinterOptions
            '-printInteractionControllerWillStartJob:$':
                name: willStartJob
    ^UIScrollViewDelegate$:
        methods:
            '-scrollViewDidEndDecelerating:$':
                name: didEndDecelerating
            '-scrollViewDidEndDragging:willDecelerate:$':
                name: didEndDragging
            '-scrollViewDidEndScrollingAnimation:$':
                name: didEndScrollingAnimation
            '-scrollViewDidEndZooming:withView:atScale:$':
                name: didEndZooming
            '-scrollViewDidScroll:$':
                name: didScroll
            '-scrollViewDidScrollToTop:$':
                name: didScrollToTop
            '-scrollViewDidZoom:$':
                name: didZoom
            '-scrollViewShouldScrollToTop:$':
                name: shouldScrollToTop
            '-scrollViewWillBeginDecelerating:$':
                name: willBeginDecelerating
            '-scrollViewWillBeginDragging:$':
                name: willBeginDragging
            '-scrollViewWillBeginZooming:withView:$':
                name: willBeginZooming
            '-scrollViewWillEndDragging:withVelocity:targetContentOffset:$':
                name: willEndDragging
            '-viewForZoomingInScrollView:$':
                name: getViewForZooming
    ^UISearchBarDelegate$:
        methods:
            '-searchBar:selectedScopeButtonIndexDidChange:$':
                name: selectedScopeButtonIndexDidChange
            '-searchBar:shouldChangeTextInRange:replacementText:$':
                name: shouldChange
            '-searchBar:textDidChange:$':
                name: didChange
            '-searchBarBookmarkButtonClicked:$':
                name: bookmarkButtonClicked
            '-searchBarCancelButtonClicked:$':
                name: cancelButtonClicked
            '-searchBarResultsListButtonClicked:$':
                name: resultsListButtonClicked
            '-searchBarSearchButtonClicked:$':
                name: searchButtonClicked
            '-searchBarShouldBeginEditing:$':
                name: shouldBeginEditing
            '-searchBarShouldEndEditing:$':
                name: shouldEndEditing
            '-searchBarTextDidBeginEditing:$':
                name: didBeginEditing
            '-searchBarTextDidEndEditing:$':
                name: didEndEditing
    ^UISearchDisplayDelegate$:
        methods:
            '-searchDisplayController:didHideSearchResultsTableView:$':
                name: didHideSearchResults
            '-searchDisplayController:didLoadSearchResultsTableView:$':
                name: didLoadSearchResults
            '-searchDisplayController:didShowSearchResultsTableView:$':
                name: didShowSearchResults
            '-searchDisplayController:shouldReloadTableForSearchScope:$':
                name: shouldReloadForSearchScope
            '-searchDisplayController:shouldReloadTableForSearchString:$':
                name: shouldReloadForSearchString
            '-searchDisplayController:willHideSearchResultsTableView:$':
                name: willHideSearchResults
            '-searchDisplayController:willUnloadSearchResultsTableView:$':
                name: willUnloadSearchResults
            '-searchDisplayController:willShowSearchResultsTableView:$':
                name: willShowSearchResults
            '-searchDisplayControllerDidBeginSearch:$':
                name: didBeginSearch
            '-searchDisplayControllerDidEndSearch:$':
                name: didEndSearch
            '-searchDisplayControllerWillBeginSearch:$':
                name: willBeginSearch
            '-searchDisplayControllerWillEndSearch:$':
                name: willEndSearch
    ^UISplitViewControllerDelegate$:
        methods:
            '-splitViewController:popoverController:willPresentViewController:$':
                name: willPresentViewController
            '-splitViewController:shouldHideViewController:inOrientation:$':
                name: shouldHideViewController
            '-splitViewController:willHideViewController:withBarButtonItem:forPopoverController:$':
                name: willHideViewController
            '-splitViewController:willShowViewController:invalidatingBarButtonItem:$':
                name: willShowViewController
    ^UIStateRestoring$:
        methods:
            '-decodeRestorableStateWithCoder:$':
                name: decodeRestorableState
            '-encodeRestorableStateWithCoder:$':
                name: encodeRestorableState
    ^UITabBarControllerDelegate$:
        methods:
            '-tabBarController:didEndCustomizingViewControllers:changed:$':
                name: didEndCustomizingViewControllers
            '-tabBarController:didSelectViewController:$':
                name: didSelectViewController
            '-tabBarController:shouldSelectViewController:$':
                name: shouldSelectViewController
            '-tabBarController:willBeginCustomizingViewControllers:$':
                name: willBeginCustomizingViewControllers
            '-tabBarController:willEndCustomizingViewControllers:changed:$':
                name: willEndCustomizingViewControllers
    ^UITabBarDelegate$:
        methods:
            '-tabBar:didBeginCustomizingItems:$':
                name: didBeginCustomizingItems
            '-tabBar:didEndCustomizingItems:changed:$':
                name: didEndCustomizingItems
            '-tabBar:didSelectItem:$':
                name: didSelectItem
            '-tabBar:willBeginCustomizingItems:$':
                name: willBeginCustomizingItems
            '-tabBar:willEndCustomizingItems:changed:$':
                name: willEndCustomizingItems
    ^UITableViewDataSource$:
        methods:
            '-numberOfSectionsInTableView:$':
                name: getNumberOfSections
            '-sectionIndexTitlesForTableView:$':
                name: getSectionIndexTitles
            '-tableView:commitEditingStyle:forRowAtIndexPath:$':
                name: commitRowEditingStyle
            '-tableView:canMoveRowAtIndexPath:$':
                name: canMoveRow
            '-tableView:cellForRowAtIndexPath:$':
                name: getRowCell
            '-tableView:canEditRowAtIndexPath:$':
                name: canEditRow
            '-tableView:moveRowAtIndexPath:toIndexPath:$':
                name: moveRow
            '-tableView:numberOfRowsInSection:$':
                name: getNumberOfRowsInSection
            '-tableView:sectionForSectionIndexTitle:atIndex:$':
                name: getSectionForSectionIndexTitle
            '-tableView:titleForFooterInSection:$':
                name: getSectionFooterTitle
            '-tableView:titleForHeaderInSection:$':
                name: getSectionHeaderTitle
    ^UITableViewDelegate$:
        methods:
            '-tableView:accessoryButtonTappedForRowWithIndexPath:$':
                name: accessoryButtonTapped
            '-tableView:canPerformAction:forRowAtIndexPath:withSender:$':
                name: canPerformAction
            '-tableView:didDeselectRowAtIndexPath:$':
                name: didDeselectRow
            '-tableView:didEndEditingRowAtIndexPath:$':
                name: didEndEditingRow
            '-tableView:didSelectRowAtIndexPath:$':
                name: didSelectRow
            '-tableView:editingStyleForRowAtIndexPath:$':
                name: getRowEditingStyle
            '-tableView:heightForFooterInSection:$':
                name: getSectionFooterHeight
            '-tableView:heightForHeaderInSection:$':
                name: getSectionHeaderHeight
            '-tableView:heightForRowAtIndexPath:$':
                name: getRowHeight
            '-tableView:indentationLevelForRowAtIndexPath:$':
                name: getRowIndentationLevel
            '-tableView:performAction:forRowAtIndexPath:withSender:$':
                name: performAction
            '-tableView:shouldIndentWhileEditingRowAtIndexPath:$':
                name: shouldIndentWhileEditingRow
            '-tableView:shouldShowMenuForRowAtIndexPath:$':
                name: shouldShowMenuForRow
            '-tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:$':
                name: getTargetForMove
            '-tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:$':
                name: getDeleteConfirmationButtonTitle
            '-tableView:viewForFooterInSection:$':
                name: getSectionFooterView
            '-tableView:viewForHeaderInSection:$':
                name: getSectionHeaderView
            '-tableView:willBeginEditingRowAtIndexPath:$':
                name: willBeginEditingRow
            '-tableView:willDeselectRowAtIndexPath:$':
                name: willDeselectRow
            '-tableView:willDisplayCell:forRowAtIndexPath:$':
                name: willDisplayCell
            '-tableView:willSelectRowAtIndexPath:$':
                name: willSelectRow
            '-tableView:didUnhighlightRowAtIndexPath:$':
                name: didUnhighlightRow
            '-tableView:didEndDisplayingFooterView:forSection:$':
                name: didEndDisplayingFooterView
            '-tableView:shouldHighlightRowAtIndexPath:$':
                name: shouldHighlightRow
            '-tableView:didEndDisplayingCell:forRowAtIndexPath:$':
                name: didEndDisplayingCell
            '-tableView:didEndDisplayingHeaderView:forSection:$':
                name: didEndDisplayingHeaderView
            '-tableView:didHighlightRowAtIndexPath:$':
                name: didHighlightRow
            '-tableView:willDisplayFooterView:forSection:$':
                name: willDisplayFooterView
            '-tableView:willDisplayHeaderView:forSection:$':
                name: willDisplayHeaderView
    ^UITextFieldDelegate$:
        methods:
            '-textField:shouldChangeCharactersInRange:replacementString:$':
                name: shouldChangeCharacters
            '-textFieldDidBeginEditing:$':
                name: didBeginEditing
            '-textFieldDidEndEditing:$':
                name: didEndEditing
            '-textFieldShouldBeginEditing:$':
                name: shouldBeginEditing
            '-textFieldShouldClear:$':
                name: shouldClear
            '-textFieldShouldEndEditing:$':
                name: shouldEndEditing
            '-textFieldShouldReturn:$':
                name: shouldReturn
    ^UITextInput$:
        methods:
            '-baseWritingDirectionForPosition:inDirection:$':
                name: getBaseWritingDirection
            '-caretRectForPosition:$':
                name: getCaretRect
            '-characterOffsetOfPosition:withinRange:$':
                name: getCharacterOffset
            '-characterRangeAtPoint:$':
                name: getCharacterRange
            '-characterRangeByExtendingPosition:inDirection:$':
                name: getCharacterRange
            '-closestPositionToPoint:$':
                name: getClosestPosition
            '-closestPositionToPoint:withinRange:$':
                name: getClosestPosition
            '-comparePosition:toPosition:$':
                name: comparePositions
            '-firstRectForRange:$':
                name: getFirstRect
            '-offsetFromPosition:toPosition:$':
                name: getOffset
            '-positionFromPosition:offset:$':
                name: getPosition
            '-positionFromPosition:inDirection:offset:$':
                name: getPosition
            '-positionWithinRange:farthestInDirection:$':
                name: getPosition
            '-positionWithinRange:atCharacterOffset:$':
                name: getPosition
            '-replaceRange:withText:$':
                name: replaceText
            '-textInRange:$':
                name: getText
            '-textRangeFromPosition:toPosition:$':
                name: getTextRange
            '-textStylingAtPosition:inDirection:$':
                name: getTextStyling
            '-frameForDictationResultPlaceholder:$':
                name: getDictationResultPlaceholderFrame
            '-selectionRectsForRange:$':
                name: getSelectionRects
            '-shouldChangeTextInRange:replacementText:$':
                name: shouldChangeText
    ^UITextInputDelegate$: {}
    ^UITextInputTokenizer$:
        methods:
            '-positionFromPosition:toBoundary:inDirection:$':
                name: getPosition
            '-rangeEnclosingPosition:withGranularity:inDirection:$':
                name: getRangeEnclosingPosition
            '-isPosition:atBoundary:inDirection:$':
                name: isPositionAtBoundary
            '-isPosition:withinTextUnit:inDirection:$':
                name: isPositionWithinTextUnit
    ^UITextInputTraits$: {}
    ^UITextViewDelegate$:
        methods:
            '-textView:shouldChangeTextInRange:replacementText:$':
                name: shouldChangeCharacters
            '-textViewDidBeginEditing:$':
                name: didBeginEditing
            '-textViewDidChange:$':
                name: didChange
            '-textViewDidChangeSelection:$':
                name: didChangeSelection
            '-textViewDidEndEditing:$':
                name: didEndEditing
            '-textViewShouldBeginEditing:$':
                name: shouldBeginEditing
            '-textViewShouldEndEditing:$':
                name: shouldEndEditing
    ^UIToolbarDelegate$: {}
    ^UIVideoEditorControllerDelegate$:
        protocols: [UINavigationControllerDelegate]
        methods:
            '-videoEditorController:didFailWithError:$':
                name: didFail
            '-videoEditorController:didSaveEditedVideoToPath:$':
                name: didSave
            '-videoEditorControllerDidCancel:$':
                name: didCancel
    ^UIViewControllerAnimatedTransitioning$: {}
    ^UIViewControllerContextTransitioning$: {}
    ^UIViewControllerInteractiveTransitioning$: {}
# Contains a single static method
#    ^UIViewControllerRestoration$: {}
    ^UIViewControllerTransitionCoordinator$: {}
    ^UIViewControllerTransitionCoordinatorContext$: {}
    ^UIViewControllerTransitioningDelegate$: {}
    ^UIWebViewDelegate$:
        methods:
            '-webView:didFailLoadWithError:$':
                name: didFailLoad
            '-webView:shouldStartLoadWithRequest:navigationType:$':
                name: shouldStartLoad
            '-webViewDidFinishLoad:$':
                name: didFinishLoad
            '-webViewDidStartLoad:$':
                name: didStartLoad

    # Informal protocols (categories)
    ^UIAccessibility$: {}
    ^UIAccessibilityAction$: {}
    ^UIAccessibilityContainer$: {}
    ^UIAccessibilityFocus$: {}
    ^UINibLoadingAdditions$: {}
    ^UIResponderStandardEditActions$: {}

functions:

    # Skip until we have CoreText support
    ^NSTextAlignmentToCTTextAlignment$:
        exclude: true
    ^NSTextAlignmentFromCTTextAlignment$:
        exclude: true

    # Make sure we don't miss any functions if new ones are introduced in a later UIKit
    ^(CG.*)$:
        name: "Function__#{g[0]}"
    ^(NS.*)$:
        name: "Function__#{g[0]}"
    ^(UI.*)$:
        name: "Function__#{g[0]}"

values: 

    # Make sure we don't miss any values if new ones are introduced in a later UIKit
    ^(UI.*)$:
        class: UIKit
        name: "Value__#{g[0]}"

constants:

    ^NS(AttachmentCharacter)$:
        class: NSTextAttachment
        name: "#{g[0]}"

    ^UILayout(Priority.*)$:
        class: NSLayoutConstraint
        name: "#{g[0]}"
        type: float

    ^UISegmentedControl(NoSegment)$:
        class: UISegmentedControl
        name: "#{g[0]}"

    # Make sure we don't miss any constants if new ones are introduced in a later UIKit
    ^(UI.*)$:
        class: UIKit
        name: "Constant__#{g[0]}"
